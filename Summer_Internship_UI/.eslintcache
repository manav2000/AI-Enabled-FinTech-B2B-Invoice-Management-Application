[{"C:\\HighRadius\\Summer_Internship_UI\\src\\index.js":"1","C:\\HighRadius\\Summer_Internship_UI\\src\\App.js":"2","C:\\HighRadius\\Summer_Internship_UI\\src\\serviceWorker.js":"3","C:\\HighRadius\\Summer_Internship_UI\\src\\utils\\theme.js":"4","C:\\HighRadius\\Summer_Internship_UI\\src\\utils\\constants.js":"5","C:\\HighRadius\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js":"6","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\InvoiceList.js":"7","C:\\HighRadius\\Summer_Internship_UI\\src\\services\\services.js":"8","C:\\HighRadius\\Summer_Internship_UI\\src\\utils\\formatter.js":"9","C:\\HighRadius\\Summer_Internship_UI\\src\\store\\mainStore.js":"10","C:\\HighRadius\\Summer_Internship_UI\\src\\actions\\invoiceAction.js":"11","C:\\HighRadius\\Summer_Internship_UI\\src\\reducers\\invoiceReducer.js":"12","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\FormModel.js":"13","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\EditForm.js":"14","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\SnackBar.js":"15","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\DeleteForm.js":"16","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\AddForm.js":"17","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\CorrespondenceTemplate.js":"18","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\TemplateOne.js":"19","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\TemplateTable.js":"20","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\TemplateTwo.js":"21","C:\\HighRadius\\Summer_Internship_UI\\src\\utils\\pdfGenerator.js":"22","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\MainTable.js":"23","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Error.js":"24","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\SearchResultTable.js":"25","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\SearchBar.js":"26","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\AddButton.js":"27","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\buttonHOC.js":"28","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\EditButton.js":"29","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\DeleteButton.js":"30","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\TemplateButton.js":"31","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\PredictButton.js":"32","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\TableRowOptimized.js":"33"},{"size":795,"mtime":1617113262499,"results":"34","hashOfConfig":"35"},{"size":1360,"mtime":1617110833684,"results":"36","hashOfConfig":"35"},{"size":5226,"mtime":1589284046000,"results":"37","hashOfConfig":"35"},{"size":524,"mtime":1615546074099,"results":"38","hashOfConfig":"35"},{"size":200,"mtime":1616665336161,"results":"39","hashOfConfig":"35"},{"size":1473,"mtime":1616847892754,"results":"40","hashOfConfig":"35"},{"size":5101,"mtime":1617266607053,"results":"41","hashOfConfig":"35"},{"size":1237,"mtime":1616669347809,"results":"42","hashOfConfig":"35"},{"size":2481,"mtime":1616347483068,"results":"43","hashOfConfig":"35"},{"size":161,"mtime":1615706833882,"results":"44","hashOfConfig":"35"},{"size":1544,"mtime":1617026728362,"results":"45","hashOfConfig":"35"},{"size":2744,"mtime":1617101634572,"results":"46","hashOfConfig":"35"},{"size":1159,"mtime":1617018855598,"results":"47","hashOfConfig":"35"},{"size":7757,"mtime":1617018855598,"results":"48","hashOfConfig":"35"},{"size":1648,"mtime":1616125448021,"results":"49","hashOfConfig":"35"},{"size":3762,"mtime":1617018855797,"results":"50","hashOfConfig":"35"},{"size":18997,"mtime":1617010655575,"results":"51","hashOfConfig":"35"},{"size":7352,"mtime":1617269376123,"results":"52","hashOfConfig":"35"},{"size":1358,"mtime":1616150266839,"results":"53","hashOfConfig":"35"},{"size":2611,"mtime":1617267084904,"results":"54","hashOfConfig":"35"},{"size":1075,"mtime":1616150266839,"results":"55","hashOfConfig":"35"},{"size":3835,"mtime":1617272177396,"results":"56","hashOfConfig":"35"},{"size":8599,"mtime":1617265930188,"results":"57","hashOfConfig":"35"},{"size":1049,"mtime":1616845906480,"results":"58","hashOfConfig":"35"},{"size":11392,"mtime":1617112925891,"results":"59","hashOfConfig":"35"},{"size":2422,"mtime":1617111509722,"results":"60","hashOfConfig":"35"},{"size":1240,"mtime":1617207161967,"results":"61","hashOfConfig":"35"},{"size":1391,"mtime":1617213290289,"results":"62","hashOfConfig":"35"},{"size":1485,"mtime":1617211945199,"results":"63","hashOfConfig":"35"},{"size":1497,"mtime":1617211971354,"results":"64","hashOfConfig":"35"},{"size":1445,"mtime":1617212169499,"results":"65","hashOfConfig":"35"},{"size":1953,"mtime":1617213592358,"results":"66","hashOfConfig":"35"},{"size":5791,"mtime":1617265094629,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"11h68bs",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\HighRadius\\Summer_Internship_UI\\src\\index.js",[],["142","143"],"C:\\HighRadius\\Summer_Internship_UI\\src\\App.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\serviceWorker.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\utils\\theme.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\utils\\constants.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\InvoiceList.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\services\\services.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\utils\\formatter.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\store\\mainStore.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\actions\\invoiceAction.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\reducers\\invoiceReducer.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\FormModel.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\EditForm.js",["144"],"import React from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { InputAdornment } from '@material-ui/core';\r\nimport {editInvoice} from '../actions/invoiceAction';\r\nimport {putInvoiceAPI} from '../services/services';\r\nimport SnackBar from  './SnackBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    edit_main: {\r\n        background: '#2A3E4C',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: 'fit-content',\r\n        height: 'fit-content',\r\n        top: '50%',\r\n        left: '50%',\r\n        position: 'absolute',\r\n        transform: 'translate(-50%,-50%)',\r\n        color: '#FFFFFF',\r\n        borderRadius: '10px'\r\n    },\r\n    edit_header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        alignItems: 'center',\r\n        borderBottom: '1.5px solid #283A46'\r\n    },\r\n    edit_body: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderBottom: '1.5px solid #283A46'\r\n    },\r\n    edit_body_inputs: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '1rem',\r\n        alignItems: 'flex-start',\r\n    },\r\n    edit_footer_btns: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '1rem',\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        color: '#97A1A9',\r\n        fontSize: '0.85rem'\r\n    },\r\n    cancelBtn: {\r\n        color: '#14AFF1',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        border: '10px',\r\n    },\r\n    resetBtn: {\r\n        borderColor: '#14AFF1',\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        marginRight: '0.5rem',\r\n    },\r\n    saveBtn: {\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        background: '#14AFF1',\r\n        \"&:hover\": {\r\n            background: '#14AFF1',\r\n        }\r\n    },\r\n    closeIcon: {\r\n        cursor: 'pointer',\r\n        fontSize: '1.3rem'\r\n    },\r\n    error: {\r\n        fontSize: '0.75rem',\r\n        color: 'red',\r\n        margin: 'auto'\r\n    },\r\n    inputRoot: {\r\n        fontSize: '0.85rem',\r\n        color: '#ffffff',\r\n    },\r\n    inputMarginDense:{\r\n        paddingTop: '0.3rem !important',\r\n        paddingBottom: '0.3rem !important',\r\n    },\r\n    inputNotch: {\r\n        borderColor: '#356680 !important',\r\n    }\r\n}))\r\n\r\nconst EditForm = React.forwardRef(({handleClose}, ref) => {\r\n    const classes = useStyles();\r\n\r\n    const invoiceData = useSelector(state => state.invoiceData);\r\n    const selected = useSelector(state => state.checked);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dataToEdit, setDataTOEdit] = React.useState({});\r\n    const [invoiceAmt, setInvoiceAmt] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const [snackbarOpen, setSnackBarOpen] = React.useState(false);\r\n\r\n    const handleSBClose = () => {\r\n        setSnackBarOpen(false)\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        console.log(selected);\r\n        setDataTOEdit(invoiceData.find((obj) => obj.doc_id === selected[0]))\r\n    },[])\r\n\r\n    const handleSave = () => {\r\n        let payload = {\r\n            doc_id: dataToEdit.doc_id,\r\n            total_open_amount: invoiceAmt ? invoiceAmt : dataToEdit.total_open_amount,\r\n            notes: notes ? notes : dataToEdit.notes\r\n        }\r\n        console.log(payload)\r\n        putInvoiceAPI(payload)\r\n        .then(res => {\r\n            dispatch(editInvoice(payload));\r\n            setError(false);\r\n            handleClose();\r\n        })\r\n        .catch((error) => {\r\n            setError(true);\r\n            setSnackBarOpen(true);\r\n        })\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setInvoiceAmt('');\r\n        setNotes('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.edit_main}>\r\n            <div className={classes.edit_header}>\r\n                <h3 style={{fontWeight: '400'}}>Edit Invoice</h3>\r\n                <CloseIcon className={classes.closeIcon} onClick={handleClose}/>\r\n            </div>\r\n            <div className={classes.edit_body}>\r\n                <div className={classes.edit_body_inputs}>\r\n                    <label className={classes.label}>Bill Amount</label>\r\n                    <OutlinedInput\r\n                        id=\"amount\"\r\n                        value={invoiceAmt}\r\n                        onChange={(e) => setInvoiceAmt(e.target.value)}\r\n                        placeholder={Number(dataToEdit.total_open_amount).toString()}\r\n                        margin=\"dense\"\r\n                        style={{\r\n                            width:'13rem',\r\n                            marginLeft: '1rem',\r\n                            height: '2rem',\r\n                        }}\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            inputMarginDense: classes.inputMarginDense,\r\n                            notchedOutline: classes.inputNotch\r\n                        }}\r\n                        startAdornment={<InputAdornment disableTypography position=\"start\">$</InputAdornment>}\r\n                    />\r\n                </div>\r\n                <div className={classes.edit_body_inputs}>\r\n                    <label className={classes.label}>Notes</label>\r\n                    <TextField\r\n                        id=\"notes\"\r\n                        multiline\r\n                        rows={4}\r\n                        value={notes}\r\n                        onChange={(e) => setNotes(e.target.value)}\r\n                        style={{\r\n                            width:'13rem'\r\n                        }}\r\n                        InputProps={{\r\n                            classes: {\r\n                                root: classes.inputRoot,\r\n                                inputMarginDense: classes.inputMarginDense,\r\n                                notchedOutline: classes.inputNotch\r\n                            }\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        placeholder={dataToEdit.notes}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div >\r\n                <div className={classes.edit_footer_btns}>\r\n                    <Button className={classes.cancelBtn} onClick={handleClose}>Cancel</Button>\r\n                    <div>\r\n                        <Button \r\n                            className={classes.resetBtn} \r\n                            variant=\"outlined\"\r\n                            onClick={handleReset}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                        <Button \r\n                            className={classes.saveBtn} \r\n                            variant=\"contained\"\r\n                            onClick={handleSave}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        { error\r\n            ? <SnackBar \r\n                open={snackbarOpen} \r\n                handleClose={handleSBClose} \r\n                error=\"PLEASE ENTER VALID INPUTS\"\r\n            />\r\n            : <></>\r\n        }\r\n        </>\r\n    )\r\n})\r\n\r\nexport default EditForm;\r\n","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\SnackBar.js",["145"],"import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport WarningSVG from '../assets/Path 18298.svg'\r\n\r\nexport default function PositionedSnackbar({open=false,handleClose,error}) {\r\n  const [state, setState] = React.useState({\r\n    vertical: 'bottom',\r\n    horizontal: 'left',\r\n  });\r\n\r\n  const { vertical, horizontal } = state;\r\n\r\n  return (\r\n    <div>\r\n        <Snackbar\r\n            anchorOrigin={{ vertical, horizontal }}\r\n            open={open}\r\n            onClose={handleClose}\r\n            key={vertical + horizontal}\r\n        >\r\n            <div \r\n                style={{\r\n                    color: '#ffffff',\r\n                    // width: 'auto',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    fontSize: '0.85rem',\r\n                    background: '#21303B',\r\n                    borderRadius: '10px',\r\n                    borderLeft: '2px solid red',\r\n                }}\r\n            >\r\n                <div style={{\r\n                    display: 'flex',\r\n                    width: '20rem'\r\n                }}>\r\n                    <img src={WarningSVG} style={{paddingLeft:'0.3rem',paddingRight:'0.3rem'}} alt=\"WarningSVG\"/>\r\n                    <p>{error}</p>\r\n                </div>\r\n                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            </div>\r\n        </Snackbar>\r\n    </div>\r\n  );\r\n}","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\DeleteForm.js",["146"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteInvoice } from '../actions/invoiceAction';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport { deleteInvoiceAPI } from '../services/services';\r\nimport { emptyChecked } from '../actions/invoiceAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    delete_main: {\r\n        background: '#2A3E4C',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '25rem',\r\n        height: 'fit-content',\r\n        top: '50%',\r\n        left: '50%',\r\n        position: 'absolute',\r\n        transform: 'translate(-50%,-50%)',\r\n        color: '#FFFFFF',\r\n        borderRadius: '10px',\r\n    },\r\n    delete_header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        alignItems: 'center',\r\n        borderBottom: '1.5px solid #283A46'\r\n    },\r\n    delete_body: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderBottom: '1.5px solid #283A46',\r\n        color: '#C0C6CA',\r\n        fontSize: '0.85rem',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n    },\r\n    delete_footer_btns: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        padding: '1rem',\r\n        alignItems: 'center',\r\n    },\r\n    closeIcon: {\r\n        cursor: 'pointer',\r\n        fontSize: '1.3rem'\r\n    },\r\n    cancelBtn: {\r\n        borderColor: '#14AFF1',\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        marginRight: '1rem',\r\n    },\r\n    deleteBtn: {\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        background: '#14AFF1',\r\n        \"&:hover\": {\r\n            background: '#14AFF1',\r\n        }\r\n    },\r\n}))\r\n\r\nconst DeleteForm = React.forwardRef(({handleClose}, ref) => {\r\n    const classes = useStyles();\r\n\r\n    const selected = useSelector(state => state.checked)\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        console.log(selected);\r\n    }, [])\r\n\r\n    const handleDelete = () => {\r\n        let payload = {\r\n            doc_ids: [...selected]\r\n        }\r\n        deleteInvoiceAPI(payload)\r\n        .then(() => {\r\n            dispatch(deleteInvoice(selected));\r\n            dispatch(emptyChecked());\r\n            handleClose();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.delete_main}>\r\n            <div className={classes.delete_header}>\r\n                <h3 style={{fontWeight: '400'}}>Delete record(s)?</h3>\r\n                <CloseIcon className={classes.closeIcon} onClick={handleClose}/>\r\n            </div>\r\n            <div className={classes.delete_body}>\r\n                <p>You'll lose your record(s) after this action. We can't recover them once you delete.</p>\r\n                <p> Are you sure you want to <span style={{color: '#FF5E5E'}}>permanently delete</span> them?</p>\r\n            </div>\r\n            <div className={classes.delete_footer_btns}>\r\n                <Button \r\n                    className={classes.cancelBtn} \r\n                    variant=\"outlined\"\r\n                    onClick={handleClose}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    className={classes.deleteBtn} \r\n                    variant=\"contained\"\r\n                    onClick={handleDelete}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default DeleteForm;\r\n","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\AddForm.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\CorrespondenceTemplate.js",["147"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TemplateOne from './TemplateOne';\r\nimport { getCorrespondenceData } from '../services/services';\r\nimport TemplateTwo from './TemplateTwo';\r\nimport { tablePDF } from '../utils/pdfGenerator';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    template_main: {\r\n        background: '#2A3E4C',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '86vw',\r\n        height: 'fit-content',\r\n        top: '50%',\r\n        left: '50%',\r\n        position: 'absolute',\r\n        transform: 'translate(-50%,-50%)',\r\n        color: '#FFFFFF',\r\n        borderRadius: '10px',\r\n    },\r\n    template_header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        alignItems: 'center',\r\n        borderBottom: '1.5px solid #283A46'\r\n    },\r\n    template_header_dropdown_div: {\r\n        display:'flex',\r\n        alignItems: 'center'\r\n    },\r\n    formControl: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    template_body: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderBottom: '1.5px solid #283A46',\r\n        color: '#C0C6CA',\r\n        fontSize: '0.85rem',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        height: '50vh',\r\n        overflow: 'auto'\r\n    },\r\n    template_footer_btns: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        padding: '1rem',\r\n        alignItems: 'center',\r\n    },\r\n    closeIcon: {\r\n        cursor: 'pointer',\r\n        fontSize: '1.3rem',\r\n        paddingLeft: '2rem',\r\n    },\r\n    cancelBtn: {\r\n        borderColor: '#14AFF1',\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        marginRight: '1rem',\r\n    },\r\n    downloadBtn: {\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        background: '#14AFF1',\r\n        \"&:hover\": {\r\n            background: '#14AFF1',\r\n        }\r\n    },\r\n    selectOutlined: {\r\n        background: '#283A46',\r\n        paddingTop: '0.5rem',\r\n        paddingBottom: '0.5rem',\r\n        fontSize: '0.85rem',\r\n        color: '#ffffff', \r\n    },\r\n    selectIcon: {\r\n        color: '#C0C6CA'\r\n    },\r\n    selectMenu: {\r\n        background: '#283A46',\r\n        color: '#ffffff',\r\n        \"& ul\": {\r\n            border: '1px solid #14AFF1',\r\n            borderRadius: '10px'\r\n        },\r\n        \"& li\": {\r\n            fontSize:'0.85rem',\r\n        },\r\n        \"& li:hover\": {\r\n            background:'#2A5368'\r\n        },\r\n    },\r\n    selected: {\r\n        backgroundColor: '#283A46 !important',\r\n        \"&:hover\": {\r\n            background:'#2A5368 !important'\r\n        }\r\n    },\r\n    selectOutline: {\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            borderColor: '#14AFF1 !important'\r\n        }\r\n    }\r\n}))\r\n\r\nconst CorrespondenceTemplate = React.forwardRef(({handleClose}, ref) => {\r\n    const classes = useStyles();\r\n\r\n    const [templateData, setTemplateData] = React.useState([]);\r\n\r\n    const [template, setTemplate] = React.useState(1);\r\n\r\n    const selected = useSelector(state => state.checked);\r\n\r\n    React.useEffect(() => {\r\n        getCorrespondenceData(selected)\r\n        .then((res) => {\r\n            setTemplateData(res.data);\r\n            console.log(res.data)\r\n        })\r\n    }, [])\r\n\r\n    const handleDropdownChange = (event) => {\r\n        setTemplate(event.target.value);\r\n    };\r\n\r\n    const handleDownload = () => {\r\n        tablePDF(templateData,template,total);\r\n    }\r\n\r\n    const total = \r\n        templateData.length > 0 ? \r\n        templateData.reduce((total, invoice) => total + invoice.total_open_amount,0)\r\n        : 0;\r\n\r\n    return (\r\n        <div className={classes.template_main}>\r\n            <div className={classes.template_header}>\r\n                <h3 style={{fontWeight: '400'}}>View Correspondence ({selected.length})</h3>\r\n                <div className={classes.template_header_dropdown_div}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <label style={{color:'#C0C6CA',fontSize:'0.85rem',marginRight:'1rem'}}>View: </label>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={template}\r\n                            onChange={handleDropdownChange}\r\n                            className={classes.selectOutline}\r\n                            classes={{\r\n                                outlined: classes.selectOutlined,\r\n                                icon: classes.selectIcon,\r\n                            }}\r\n                            MenuProps={{\r\n                                classes:{\r\n                                    paper: classes.selectMenu,\r\n                                },\r\n                                anchorOrigin: {\r\n                                    vertical: \"bottom\",\r\n                                    horizontal: \"left\"\r\n                                },\r\n                                transformOrigin: {\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"left\"\r\n                                },\r\n                                getContentAnchorEl: null\r\n                            }}\r\n                        >\r\n                            <MenuItem classes={{selected: classes.selected}} value={1}>Template 1</MenuItem>\r\n                            <MenuItem classes={{selected: classes.selected}} value={2}>Template 2</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <CloseIcon className={classes.closeIcon} onClick={handleClose}/>\r\n                </div>\r\n            </div>\r\n            <div className={classes.template_body}>\r\n                {\r\n                    template === 1 ?\r\n                    <>\r\n                        <TemplateOne templateData={templateData} total={total}/>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <TemplateTwo templateData={templateData}/>\r\n                    </>\r\n                }\r\n            </div>\r\n            <div className={classes.template_footer_btns}>\r\n                <Button \r\n                    className={classes.cancelBtn} \r\n                    variant=\"outlined\"\r\n                    onClick={handleClose}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    className={classes.downloadBtn} \r\n                    variant=\"contained\"\r\n                    onClick={handleDownload}\r\n                >\r\n                    Download\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CorrespondenceTemplate\r\n","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\TemplateOne.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\TemplateTable.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\TemplateTwo.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\utils\\pdfGenerator.js",["148"],"import jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport {formatter} from './formatter';\r\n\r\n\r\nconst templateOne = (templateData, total) => {\r\n    var doc = new jsPDF();\r\n\r\n    doc.setFontSize(14);\r\n    doc.setFont('helvetica', \"normal\");\r\n\r\n    doc.text(\"Subject: Invoice Details - HighRadius\", 10, 20);\r\n\r\n    doc.text(\"Dear Sir/Madam,\", 10, 35);\r\n    doc.text(\"Greetings!\", 10, 43);\r\n\r\n    doc.text(\"This is to remind you that there are one or more open invoices on your account. lease \", 10, 58);\r\n    doc.text(\"provide at your earliest convenience an update on the payment details or clarify the \", 10, 66);\r\n    doc.text(\"reason for the delay. If you have any specific issue with the invoice(s), please let us \",10,74);\r\n    doc.text(\"know so that we can address it to the correct Department.\", 10, 82);\r\n    doc.text(\"Please find the details of the invoices below:\",10,97);\r\n\r\n    autoTable(doc, {\r\n        html: '#correspondence-table',\r\n        theme: 'striped',\r\n        styles: {\r\n            fontSize: 12\r\n        },\r\n        margin: {\r\n            left: 10,\r\n        },\r\n        startY: 110\r\n    });\r\n\r\n    var finalY = doc.lastAutoTable.finalY;\r\n    var pageHeight = doc.internal.pageSize.getHeight();\r\n\r\n    doc.text(`Total Amount to be Paid: $${formatter(total)}`, 10, finalY+10);\r\n\r\n    console.log(finalY);\r\n    console.log(pageHeight);\r\n\r\n    doc.text(\"In case you have already made a payment for the above items, please send us the details\", 10, finalY+25);\r\n    doc.text(\"to ensure the payment is posted.\", 10, finalY+33);\r\n    doc.text(\"Let us know if we can be of any further assistance. Looking forward to hearing from you.\", 10, finalY+41);\r\n\r\n    doc.text(\"Kind Regards,\", 10, finalY+56);\r\n    doc.text(\"Manav Parmar\", 10, finalY+64);\r\n    doc.text(\"Phone : 9823647590\", 10, finalY+72);\r\n    doc.text(\"Fax : --\", 10, finalY+80);\r\n    doc.text(\"Email : manavparmar@gmail.com\", 10, finalY+88);\r\n    doc.text(\"HighRadius\", 10, finalY+96);\r\n\r\n    doc.save('template1.pdf');\r\n}\r\n\r\nconst templateTwo = (templateData) => {\r\n    var doc = new jsPDF();\r\n\r\n    doc.setFontSize(14);\r\n    doc.setFont('helvetica', \"normal\");\r\n\r\n    doc.text(\"Subject: Invoice Details - HighRadius\", 10, 20);\r\n\r\n    doc.text(\"Dear Sir/Madam,\", 10, 35);\r\n\r\n    doc.text(\"Gentle reminder that you have one or more open invoices on your account. Please\", 10, 50);\r\n    doc.text(\"get back to us with an expected date of payment. If you have any specific issue\", 10, 58);\r\n    doc.text(\"with the invoice(s), please let us know so that we can address it at the earliest.\",10,66);\r\n    doc.text(\"Please find the details of the invoices below:\", 10, 81);\r\n    \r\n    autoTable(doc, {\r\n        html: '#correspondence-table',\r\n        theme: 'striped',\r\n        styles: {\r\n            fontSize: 12\r\n        },\r\n        margin: {\r\n            left: 10,\r\n        },\r\n        startY: 95\r\n    });\r\n\r\n    var finalY = doc.lastAutoTable.finalY;\r\n    var pageHeight = doc.internal.pageSize.getHeight();\r\n\r\n    doc.text(\"In case you have already made a payment for the above items, please send us the \", 10, finalY+15);\r\n    doc.text(\"details to ensure the payment is posted.\", 10, finalY+23);\r\n    doc.text(\"Let us know if we can be of any further assistance. Looking forward to hearing from you.\", 10, finalY+31);\r\n\r\n    doc.text(\"Kind Regards,\", 10, finalY+46);\r\n    doc.text(\"Manav Parmar\", 10, finalY+54);\r\n    doc.text(\"Phone : 9823647590\", 10, finalY+62);\r\n    doc.text(\"Fax : --\", 10, finalY+70);\r\n    doc.text(\"Email : manavparmar@gmail.com\", 10, finalY+78);\r\n    doc.text(\"HighRadius\", 10, finalY+86);\r\n\r\n    doc.save('template2.pdf');\r\n}\r\n\r\nexport const tablePDF = (templateData, tempNum, total) => {\r\n    if(tempNum === 1) {\r\n        templateOne(templateData, total)\r\n    } else {\r\n        templateTwo(templateData)\r\n    }\r\n}\r\n","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\MainTable.js",["149","150"],"import React, {useState, useEffect} from 'react';\r\nimport { CircularProgress, Checkbox } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// import TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {getInvoiceAPI} from '../services/services';\r\nimport {formatter,dateFormatter,checkDueDate} from '../utils/formatter';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {getInvoices, emptyInvoiceData, setChecked, emptyChecked} from '../actions/invoiceAction';\r\n// import { connect } from 'react-redux';\r\nimport TableRowOptimized from './TableRowOptimized';\r\nimport Error from './Error';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        maxHeight: '64vh'\r\n    },\r\n    tableCell: {\r\n        borderBottom: '1px solid #283A46'\r\n    },\r\n    loadingDiv: {\r\n        height: \"10%\", \r\n        margin: 'auto',\r\n        paddingTop: '4%',\r\n        overflow: \"hidden\" , \r\n        paddingBottom: '2%',\r\n        display: 'flex', \r\n        flexDirection: 'column',\r\n        alignItems: 'center', \r\n        justifyContent: 'center'\r\n    },\r\n    stickyHeader: {\r\n        backgroundColor: 'rgb(40, 58, 70) !important',\r\n    }\r\n}))\r\n\r\nconst columns = [\r\n    { id: 'checkbox', minWidth: 10 },\r\n    { id: 'name_customer', label: 'Customer Name', minWidth: 140 },\r\n    { id: 'cust_number', label: 'Customer \\u0023', minWidth: 70 },\r\n    {\r\n        id: 'invoice_id',\r\n        label: 'Bill \\u0023',\r\n        minWidth: 70,\r\n        align: 'right',\r\n        format: (value) => value,\r\n    },\r\n    {\r\n        id: 'total_open_amount',\r\n        label: 'Bill Amount',\r\n        minWidth: 100,\r\n        align: 'right',\r\n        format: (value) => formatter(value),\r\n    },\r\n    {\r\n        id: 'due_in_date',\r\n        label: 'Due Date',\r\n        minWidth: 80,\r\n        align: 'right',\r\n        format: (value) => dateFormatter(value),\r\n    },\r\n    {\r\n        id: 'predicted_payment_date',\r\n        label: 'Predicted Payment Date',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => dateFormatter(value),\r\n    },\r\n    {\r\n        id: 'predicted_aging_bucket',\r\n        label: 'Predicted Aging Bucket',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value,\r\n    },\r\n    {\r\n        id: 'notes',\r\n        label: 'Notes',\r\n        minWidth: 120,\r\n        align: 'right',\r\n        format: (value) => value.slice(0,15) + \"...\",\r\n    },\r\n];\r\n\r\nconst CustomCheckbox = withStyles({\r\n    root: {\r\n        color:\"#97A1A9\",\r\n        \"&$checked\": {\r\n            color: \"#14AFF1\",\r\n        },\r\n        \"&:hover\": {\r\n            background: \"none\",\r\n        }\r\n    },\r\n    checked: {\r\n        \r\n    }\r\n})(Checkbox);\r\n\r\nfunction MainTable({search, setSearch}) {\r\n    const classes = useStyles();\r\n    const invoiceData = useSelector(state => state.invoiceData);\r\n    const checked = useSelector(state => state.checked);\r\n    const dispatch = useDispatch();\r\n\r\n    const [isNext, setNext] = useState(false);\r\n    const [page, setPageCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        if(search.length === 0) {\r\n            dispatch(emptyChecked());\r\n            dispatch(emptyInvoiceData());\r\n            getInvoiceAPI(1)\r\n            .then(res => {\r\n                console.log(\"running on page\", page);\r\n                dispatch(getInvoices(res.data));\r\n                setPageCount(page+1);\r\n                setNext(true);\r\n            });\r\n        } else {\r\n            if(page !== 1) {\r\n                setPageCount(1);\r\n            }\r\n            if(checked.length > 0) { \r\n                dispatch(emptyChecked());\r\n            }\r\n        }\r\n    }, [search])\r\n\r\n    const fetchMoreData = () => {\r\n        getInvoiceAPI(page)\r\n        .then(res => {\r\n            dispatch(getInvoices(res.data));\r\n            setNext(true)\r\n            setPageCount(page + 1);\r\n        });\r\n    }\r\n    \r\n    const handleToggleAll = (e) => {\r\n        if (e.target.checked) {\r\n            const newSelecteds = invoiceData.map((invoice) => invoice.doc_id);\r\n            dispatch(setChecked(newSelecteds));\r\n            return;\r\n        }\r\n        dispatch(setChecked([]));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                search !== '' && invoiceData.length === 0 ?\r\n                    <Error setSearch={setSearch}/>\r\n                :\r\n                <InfiniteScroll\r\n                    dataLength={invoiceData.length}\r\n                    hasMore={search === ''? isNext : false}\r\n                    next={search === ''? fetchMoreData : null}\r\n                    loader={\r\n                        <div className={classes.loadingDiv}>\r\n                            <CircularProgress style={{color:'#14AFF1'}}/>\r\n                            <p style={{color:'#FFFFFF', fontSize:'0.8rem'}}>Loading</p>\r\n                        </div>\r\n                    }\r\n                    height='64vh'\r\n                    style={{\r\n                        width:'95.6vw'\r\n                    }}\r\n                >\r\n                    <Table stickyHeader aria-label=\"simple table\">\r\n                        <TableHead style={{fontSize: '0.8rem'}}>\r\n                        <TableRow>\r\n                            {columns.map((column) => {\r\n                                if(column.id === 'checkbox') {\r\n                                    return (\r\n                                        <TableCell\r\n                                            key={column.id}\r\n                                            align={column.align}\r\n                                            style={{ minWidth: column.minWidth,\r\n                                                paddingTop:'0rem', \r\n                                                paddingBottom:'0.2rem',\r\n                                            }}\r\n                                            classes={{\r\n                                                root: classes.tableCell,\r\n                                                stickyHeader: classes.stickyHeader\r\n                                            }}\r\n                                        >\r\n                                            <CustomCheckbox\r\n                                                edge=\"end\"\r\n                                                onChange={(e) => handleToggleAll(e)}\r\n                                                // checked={checked.indexOf(data[\"doc_id\"]) !== -1}\r\n                                                disableRipple\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <TableCell\r\n                                            key={column.id}\r\n                                            align={column.align}\r\n                                            style={{ minWidth: column.minWidth, \r\n                                            color: '#97A1A9',paddingTop:'0rem', \r\n                                            paddingBottom:'0.2rem', fontSize: '0.85rem'}}\r\n                                            classes={{\r\n                                                root: classes.tableCell,\r\n                                                stickyHeader: classes.stickyHeader\r\n                                            }}\r\n                                        >\r\n                                            {column.label}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{color: '#FFFFFF'}}>\r\n                        {invoiceData.map((data, index) => (\r\n                            <TableRowOptimized data={data} index={index} key={data.doc_id}\r\n                            checked={checked}/>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </InfiniteScroll>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MainTable);\r\n","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Error.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\SearchResultTable.js",["151"],"import React, { useEffect} from 'react';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n// import {getInvoiceAPI, searchAPI} from '../services/services';\r\nimport {formatter,dateFormatter,checkDueDate} from '../utils/formatter';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {setChecked,emptyChecked} from '../actions/invoiceAction';\r\n// import {getInvoices, emptyInvoiceData, searchInvoice} from '../actions/invoiceAction';\r\nimport Error from './Error';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        height: '64vh',\r\n        width: '95vw'\r\n    },\r\n    tableCell: {\r\n        borderBottom: '1px solid #283A46'\r\n    },\r\n    stickyHeader: {\r\n        backgroundColor: 'rgb(40, 58, 70) !important',\r\n    }\r\n}))\r\n\r\nconst columns = [\r\n    { id: 'checkbox', minWidth: 10 },\r\n    { id: 'name_customer', label: 'Customer Name', minWidth: 140 },\r\n    { id: 'cust_number', label: 'Customer \\u0023', minWidth: 70 },\r\n    {\r\n        id: 'invoice_id',\r\n        label: 'Bill \\u0023',\r\n        minWidth: 70,\r\n        align: 'right',\r\n    },\r\n    {\r\n        id: 'total_open_amount',\r\n        label: 'Bill Amount',\r\n        minWidth: 100,\r\n        align: 'right',\r\n        format: (value) => formatter(value),\r\n    },\r\n    {\r\n        id: 'due_in_date',\r\n        label: 'Due Date',\r\n        minWidth: 80,\r\n        align: 'right',\r\n        format: (value) => dateFormatter(value),\r\n    },\r\n    {\r\n        id: 'predicted_payment_date',\r\n        label: 'Predicted Payment Date',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => dateFormatter(value),\r\n    },\r\n    {\r\n        id: 'predicted_aging_bucket',\r\n        label: 'Predicted Aging Bucket',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value,\r\n    },\r\n    {\r\n        id: 'notes',\r\n        label: 'Notes',\r\n        minWidth: 120,\r\n        align: 'right',\r\n        format: (value) => value.slice(0,15) + \"...\",\r\n    },\r\n];\r\n\r\nconst CustomCheckbox = withStyles({\r\n    root: {\r\n        color:\"#97A1A9\",\r\n        \"&$checked\": {\r\n            color: \"#14AFF1\",\r\n        },\r\n        \"&:hover\": {\r\n            background: \"none\",\r\n        }\r\n    },\r\n    checked: {\r\n        \r\n    }\r\n})(Checkbox);\r\n\r\nfunction SearchResultTable({search, setSearch}) {\r\n    const classes = useStyles();\r\n\r\n    const invoiceData = useSelector(state => state.invoiceData);\r\n    const checked = useSelector(state => state.checked);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(emptyChecked());\r\n    }, [search])\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n    \r\n        if (currentIndex === -1) {\r\n          newChecked.push(value);\r\n        } else {\r\n          newChecked.splice(currentIndex, 1);\r\n        }\r\n    \r\n        dispatch(setChecked(newChecked));\r\n        console.log(checked)\r\n    };\r\n\r\n    const handleToggleAll = (e) => {\r\n        if (e.target.checked) {\r\n            const newSelecteds = invoiceData.map((invoice) => invoice.doc_id);\r\n            dispatch(setChecked(newSelecteds));\r\n            return;\r\n        }\r\n        dispatch(emptyChecked());\r\n    }\r\n\r\n    return (\r\n        <>\r\n         {invoiceData.length > 0 ?\r\n          <TableContainer className={classes.table}>\r\n                    <Table \r\n                        stickyHeader \r\n                        aria-label=\"simple table\"\r\n                    >\r\n                        <TableHead style={{fontSize: '0.8rem'}}>\r\n                        <TableRow>\r\n                            {columns.map((column) => {\r\n                                if(column.id === 'checkbox') {\r\n                                    return (\r\n                                        <TableCell\r\n                                            key={column.id}\r\n                                            align={column.align}\r\n                                            style={{ minWidth: column.minWidth,\r\n                                                paddingTop:'0rem', \r\n                                                paddingBottom:'0.2rem',\r\n                                            }}\r\n                                            classes={{\r\n                                                root: classes.tableCell,\r\n                                                stickyHeader: classes.stickyHeader\r\n                                            }}\r\n                                        >\r\n                                            <CustomCheckbox\r\n                                                edge=\"end\"\r\n                                                onChange={(e) => handleToggleAll(e)}\r\n                                                // checked={checked.indexOf(data[\"doc_id\"]) !== -1}\r\n                                                disableRipple\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </TableCell>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <TableCell\r\n                                            key={column.id}\r\n                                            align={column.align}\r\n                                            style={{ minWidth: column.minWidth, \r\n                                            color: '#97A1A9',paddingTop:'0rem', \r\n                                            paddingBottom:'0.2rem', fontSize: '0.85rem'}}\r\n                                            classes={{\r\n                                                root: classes.tableCell,\r\n                                                stickyHeader: classes.stickyHeader\r\n                                            }}\r\n                                        >\r\n                                            {column.label}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody style={{color: '#FFFFFF'}}>\r\n                        {invoiceData.map((data, index) => (\r\n                            <TableRow \r\n                                role=\"checkbox\" \r\n                                tabIndex={-1} \r\n                                key={data.doc_id}\r\n                                style={{\r\n                                    background: checked.includes(data.doc_id) \r\n                                                ? '#2A5368' \r\n                                                : (index+1)%2===0 ?'#283A46':''\r\n                                }}\r\n                            >\r\n                                {columns.map((column) => {\r\n                                    if(column.id === 'checkbox') {\r\n                                        return (\r\n                                            <TableCell\r\n                                                key={column.id} \r\n                                                align={column.align}\r\n                                                style={{\r\n                                                    color: '#ffffff',paddingTop:'0.2rem',\r\n                                                    paddingBottom: '0.2rem'\r\n                                                }}\r\n                                                classes={{root: classes.tableCell}}\r\n                                            >\r\n                                                <CustomCheckbox\r\n                                                    key={data.doc_id}\r\n                                                    edge=\"end\"\r\n                                                    onChange={handleToggle(data[\"doc_id\"])}\r\n                                                    checked={checked.indexOf(data[\"doc_id\"]) !== -1}\r\n                                                    disableRipple\r\n                                                    size=\"small\"\r\n                                                />\r\n                                            </TableCell>\r\n                                        )\r\n                                    } else {\r\n                                        const value = data[column.id] ? data[column.id] : \"--\"\r\n                                        return (\r\n                                            <TableCell \r\n                                                key={column.id} \r\n                                                align={column.align}\r\n                                                style={{\r\n                                                    paddingTop:'0.2rem',\r\n                                                    paddingBottom: '0.2rem',\r\n                                                    color: column.id === \"due_in_date\" ? \r\n                                                    checkDueDate(data[\"due_in_date\"]) ?\r\n                                                    \"#FF5B5B\":\"#ffffff\"\r\n                                                    :'#ffffff',\r\n                                                }}\r\n                                                classes={{root: classes.tableCell}}\r\n                                            >\r\n                                                {column.format && data[column.id]\r\n                                                    ? column.format(value)\r\n                                                    : column.id === \"invoice_id\" ?\r\n                                                        <>\r\n                                                        <span style={{background:'#2A5368',padding:'0.2rem 0rem'}}>\r\n                                                            {data[column.id].toString().substring(0,search.length)}\r\n                                                        </span>\r\n                                                        <span style={{padding:'0.2rem 0rem'}}>\r\n                                                            {data[column.id].toString().substring(search.length)}\r\n                                                        </span>\r\n                                                        </>\r\n                                                        :\r\n                                                        value\r\n                                                }\r\n                                            </TableCell>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                :\r\n                <Error setSearch={setSearch}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResultTable;\r\n","C:\\HighRadius\\Summer_Internship_UI\\src\\components\\SearchBar.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\AddButton.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\buttonHOC.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\EditButton.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\DeleteButton.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\TemplateButton.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\Buttons\\PredictButton.js",[],"C:\\HighRadius\\Summer_Internship_UI\\src\\components\\TableRowOptimized.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":123,"column":7,"nodeType":"158","endLine":123,"endColumn":9,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":8,"column":17,"nodeType":"162","messageId":"163","endLine":8,"endColumn":25},{"ruleId":"156","severity":1,"message":"164","line":79,"column":8,"nodeType":"158","endLine":79,"endColumn":10,"suggestions":"165"},{"ruleId":"156","severity":1,"message":"164","line":137,"column":8,"nodeType":"158","endLine":137,"endColumn":10,"suggestions":"166"},{"ruleId":"160","severity":1,"message":"167","line":85,"column":9,"nodeType":"162","messageId":"163","endLine":85,"endColumn":19},{"ruleId":"160","severity":1,"message":"168","line":12,"column":33,"nodeType":"162","messageId":"163","endLine":12,"endColumn":45},{"ruleId":"156","severity":1,"message":"169","line":133,"column":8,"nodeType":"158","endLine":133,"endColumn":16,"suggestions":"170"},{"ruleId":"156","severity":1,"message":"171","line":103,"column":8,"nodeType":"158","endLine":103,"endColumn":16,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'invoiceData' and 'selected'. Either include them or remove the dependency array.","ArrayExpression",["175"],"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array.",["176"],["177"],"'pageHeight' is assigned a value but never used.","'checkDueDate' is defined but never used.","React Hook useEffect has missing dependencies: 'checked.length', 'dispatch', and 'page'. Either include them or remove the dependency array. You can also do a functional update 'setPageCount(p => ...)' if you only need 'page' in the 'setPageCount' call.",["178"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [invoiceData, selected]",{"range":"189","text":"190"},"Update the dependencies array to be: [selected]",{"range":"191","text":"192"},{"range":"193","text":"192"},"Update the dependencies array to be: [checked.length, dispatch, page, search]",{"range":"194","text":"195"},"Update the dependencies array to be: [dispatch, search]",{"range":"196","text":"197"},[3554,3556],"[invoiceData, selected]",[2265,2267],"[selected]",[3817,3819],[3978,3986],"[checked.length, dispatch, page, search]",[2934,2942],"[dispatch, search]"]